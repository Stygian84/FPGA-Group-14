//the questions and cases no are generated by a python file    
//no of bits in rng input corresponds to maximum no of qns    
//( max no of qns = 2^(x bits of rng input) )    
//e.g. 2 bits = 2^2 qns max , 3 bits = 2^3 qns max    

module difficulty1 ( //category = animals    
    input rng[4], //change accordingly    
    output question0[5],    
    output question1[5],    
    output question2[5],    
    output question3[5],    
    output question4[5]    
  ) {    
  always {    

    case(rng){

      default:
      question0=5b10100;
      question1=5b01001;
      question2=5b00111;
      question3=5b00101;
      question4=5b10010;

      b0000: //tiger
      question0=5b10100;
      question1=5b01001;
      question2=5b00111;
      question3=5b00101;
      question4=5b10010;

      b0001: //horse
      question0=5b01000;
      question1=5b01111;
      question2=5b10010;
      question3=5b10011;
      question4=5b00101;

      b0010: //whale
      question0=5b10111;
      question1=5b01000;
      question2=5b00001;
      question3=5b01100;
      question4=5b00101;

      b0011: //zebra
      question0=5b11010;
      question1=5b00101;
      question2=5b00010;
      question3=5b10010;
      question4=5b00001;

      b0100: //eagle
      question0=5b00101;
      question1=5b00001;
      question2=5b00111;
      question3=5b01100;
      question4=5b00101;

      b0101: //mouse
      question0=5b01101;
      question1=5b01111;
      question2=5b10101;
      question3=5b10011;
      question4=5b00101;

      b0110: //koala
      question0=5b01011;
      question1=5b01111;
      question2=5b00001;
      question3=5b01100;
      question4=5b00001;

      b0111: //panda
      question0=5b10000;
      question1=5b00001;
      question2=5b01110;
      question3=5b00100;
      question4=5b00001;

      b1000: //snake
      question0=5b10011;
      question1=5b01110;
      question2=5b00001;
      question3=5b01011;
      question4=5b00101;

      b1001: //camel
      question0=5b00011;
      question1=5b00001;
      question2=5b01101;
      question3=5b00101;
      question4=5b01100;

      b1010: //moose
      question0=5b01101;
      question1=5b01111;
      question2=5b01111;
      question3=5b10011;
      question4=5b00101;

      b1011: //rhino
      question0=5b10010;
      question1=5b01000;
      question2=5b01001;
      question3=5b01110;
      question4=5b01111;

      b1100: //otter
      question0=5b01111;
      question1=5b10100;
      question2=5b10100;
      question3=5b00101;
      question4=5b10010;

      b1101: //sheep
      question0=5b10011;
      question1=5b01000;
      question2=5b00101;
      question3=5b00101;
      question4=5b10000;

      b1110: //sloth
      question0=5b10011;
      question1=5b01100;
      question2=5b01111;
      question3=5b10100;
      question4=5b01000;

      b1111: //goose
      question0=5b00111;
      question1=5b01111;
      question2=5b01111;
      question3=5b10011;
      question4=5b00101;


  }
}