/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module compare_22 (
    input [15:0] a,
    input [15:0] b,
    input [5:0] alu_fn,
    output reg [15:0] out
  );
  
  
  
  wire [16-1:0] M_adderunit_out;
  wire [1-1:0] M_adderunit_z;
  wire [1-1:0] M_adderunit_v;
  wire [1-1:0] M_adderunit_n;
  wire [1-1:0] M_adderunit_error;
  reg [16-1:0] M_adderunit_a;
  reg [16-1:0] M_adderunit_b;
  reg [6-1:0] M_adderunit_alufn;
  adder_21 adderunit (
    .a(M_adderunit_a),
    .b(M_adderunit_b),
    .alufn(M_adderunit_alufn),
    .out(M_adderunit_out),
    .z(M_adderunit_z),
    .v(M_adderunit_v),
    .n(M_adderunit_n),
    .error(M_adderunit_error)
  );
  
  reg z;
  reg v;
  reg n;
  
  always @* begin
    M_adderunit_a = a;
    M_adderunit_b = b;
    M_adderunit_alufn = 6'h01;
    z = M_adderunit_z;
    v = M_adderunit_v;
    n = M_adderunit_n;
    out = 16'h0000;
    
    case (alu_fn)
      6'h33: begin
        out[0+0-:1] = z;
      end
      6'h35: begin
        out[0+0-:1] = n ^ v;
      end
      6'h37: begin
        out[0+0-:1] = z | (n ^ v);
      end
      default: begin
        out = 16'h0000;
      end
    endcase
  end
endmodule
