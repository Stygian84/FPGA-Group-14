/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module modified_counter_7 (
    input increase_button,
    input decrease_button,
    input reset_to_zero,
    input clk,
    input rst,
    output reg [4:0] out
  );
  
  
  
  wire [1-1:0] M_increase_cond_out;
  reg [1-1:0] M_increase_cond_in;
  button_conditioner_1 increase_cond (
    .clk(clk),
    .in(M_increase_cond_in),
    .out(M_increase_cond_out)
  );
  wire [1-1:0] M_increase_edge_out;
  reg [1-1:0] M_increase_edge_in;
  edge_detector_2 increase_edge (
    .clk(clk),
    .in(M_increase_edge_in),
    .out(M_increase_edge_out)
  );
  wire [1-1:0] M_decrease_cond_out;
  reg [1-1:0] M_decrease_cond_in;
  button_conditioner_1 decrease_cond (
    .clk(clk),
    .in(M_decrease_cond_in),
    .out(M_decrease_cond_out)
  );
  wire [1-1:0] M_decrease_edge_out;
  reg [1-1:0] M_decrease_edge_in;
  edge_detector_2 decrease_edge (
    .clk(clk),
    .in(M_decrease_edge_in),
    .out(M_decrease_edge_out)
  );
  reg [4:0] M_ctr_d, M_ctr_q = 1'h0;
  
  always @* begin
    M_ctr_d = M_ctr_q;
    
    out = M_ctr_q;
    M_increase_cond_in = increase_button;
    M_increase_edge_in = M_increase_cond_out;
    M_decrease_cond_in = decrease_button;
    M_decrease_edge_in = M_decrease_cond_out;
    if (reset_to_zero) begin
      M_ctr_d = 1'h0;
    end
    if (M_increase_edge_out) begin
      M_ctr_d = M_ctr_q + 1'h1;
      if (M_ctr_q == 5'h1a) begin
        M_ctr_d = 1'h1;
      end
    end
    if (M_decrease_edge_out) begin
      M_ctr_d = M_ctr_q - 1'h1;
      if (M_ctr_q == 1'h1) begin
        M_ctr_d = 5'h1a;
      end
    end
    if (M_ctr_q == 1'h0) begin
      M_ctr_d = 1'h1;
    end
  end
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_ctr_q <= 1'h0;
    end else begin
      M_ctr_q <= M_ctr_d;
    end
  end
  
endmodule
